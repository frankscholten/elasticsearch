apply plugin: 'application'
apply plugin: 'spring-boot'

mainClassName = "org.apache.mesos.elasticsearch.scheduler.Main"
ext {
    imageName = imagePrefix + '/elasticsearch-scheduler'
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.4.RELEASE")
    }
}
repositories {
    maven {
        url "https://jitpack.io"
    }
}
configurations {
    all*.exclude group:"org.springframework.boot", module: "spring-boot-starter-logging"
}
dependencies {

    compile project(':commons')

    compile("org.springframework.boot:spring-boot-starter-web:1.2.4.RELEASE")
    compile("org.springframework.boot:spring-boot-starter-log4j:1.2.4.RELEASE")
    compile "commons-cli:commons-cli:1.3.1"
    compile "commons-io:commons-io:2.4"
    compile "log4j:log4j:1.2.17"

    compile 'org.webjars:angularjs:1.4.1'
    compile 'org.webjars.bower:angular-route:1.4.1'
    compile 'org.webjars.bower:angular-resource:1.4.1'
    compile 'org.webjars:bootstrap:3.3.5'
    compile 'org.webjars:font-awesome:4.3.0'
    compile 'org.webjars.bower:rdash-ui:1.0.1'
    compile 'org.webjars:momentjs:2.10.3'
    compile 'org.webjars:angular-moment:0.10.1'
    compile 'org.webjars.bower:json-formatter:0.2.7'

    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'joda-time:joda-time:2.3'

}

jar {
    baseName = "elasticsearch-mesos-scheduler"
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } } // Include dependencies
    from { project(":executor").getTasksByName("copyJar", false)[0].outputs.files[0] } // Include executor
    manifest {
        attributes(
            'Main-Class'                : mainClassName,
            'Implementation-Version'    : project.version
        )
    }
}

test {
    testLogging {
        showStandardStreams = true
    }
}

task taskCopyFilesForDocker(type: Copy) {
    dependsOn "copyShellScript", "copyJar"
}

task copyJar(type: Copy) {
    dependsOn   'jar'
    from        "build/libs/elasticsearch-mesos-scheduler-${project.version}.jar"
    into        'build/docker'
    rename { String fileName ->
        fileName.replace("-${project.version}", "")
    }
}

task copyShellScript(type: Copy) {
    from        "start-scheduler.sh"
    into        'build/docker'
}